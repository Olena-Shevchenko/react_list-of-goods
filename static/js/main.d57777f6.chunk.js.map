{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","reverse","setState","sortAlphabetically","ALPHABET","sortByLength","LENGTH","reset","this","goods","visibleGoods","sort","goodA","goodB","localeCompare","length","Error","getReorderedGoods","startOrder","className","onClick","type","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBG,YAAaH,EAAMG,gBARzB,EAYEG,mBAAqB,WACnB,EAAKD,SAAS,CAAEJ,SAAUJ,EAASU,YAbvC,EAgBEC,aAAe,WACb,EAAKH,SAAS,CAAEJ,SAAUJ,EAASY,UAjBvC,EAoBEC,MAAQ,WACN,EAAKL,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KAvBlB,4CA2BE,WACE,MAAiCQ,KAAKX,MAA9BG,EAAR,EAAQA,WAAYF,EAApB,EAAoBA,SACdW,EAnEH,SACLA,EADK,GAGJ,IADCX,EACF,EADEA,SAAUE,EACZ,EADYA,WAENU,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKJ,EAASK,KACZ,MAEF,KAAKL,EAASU,SACZM,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAME,cAAcD,MAE7B,MAEF,KAAKnB,EAASY,OACZI,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAMG,OAASF,EAAME,UAE9B,MAEF,QACE,MAAMC,MAAM,oBAOhB,OAJIhB,GACFU,EAAaT,UAGRS,EAqCSO,CAAkBtB,EAAiB,CAAEG,WAAUE,eACvDkB,EAAapB,IAAaJ,EAASK,OAASC,EAElD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASZ,KAAKL,mBACdkB,KAAK,SACLF,UAAS,yBAAoBrB,IAAaJ,EAASU,SAC/C,GACA,YALN,iCAWA,wBACEgB,QAASZ,KAAKH,aACdgB,KAAK,SACLF,UAAS,4BAAuBrB,IAAaJ,EAASY,OAClD,GACA,YALN,4BAWA,wBACEc,QAASZ,KAAKP,QACdoB,KAAK,SACLF,UAAS,4BAAuBnB,EAC5B,GACA,aALN,sBAUEkB,GACA,wBACEE,QAASZ,KAAKD,MACdc,KAAK,SACLF,UAAU,4BAHZ,sBASJ,6BACGV,EAAMa,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,eAhFnB,GAAyBC,IAAMC,WC/D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d57777f6.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.NONE:\n      break;\n\n    case SortType.ALPHABET:\n      visibleGoods.sort((goodA, goodB) => {\n        return goodA.localeCompare(goodB);\n      });\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((goodA, goodB) => {\n        return goodA.length - goodB.length;\n      });\n      break;\n\n    default:\n      throw Error('Unknown sortType');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n    const startOrder = sortType === SortType.NONE && !isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.sortAlphabetically}\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.ALPHABET\n              ? ''\n              : 'is-light'\n            }`}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.sortByLength}\n            type=\"button\"\n            className={`button is-success ${sortType === SortType.LENGTH\n              ? ''\n              : 'is-light'\n            }`}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.reverse}\n            type=\"button\"\n            className={`button is-warning ${isReversed\n              ? ''\n              : ' is-light'\n            }`}\n          >\n            Reverse\n          </button>\n          {!startOrder && (\n            <button\n              onClick={this.reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          {goods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}