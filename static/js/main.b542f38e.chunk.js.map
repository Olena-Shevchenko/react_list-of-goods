{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","isReversed","reverse","setState","sortAlphabetically","sortByLength","reset","this","goods","visibleGoods","sort","goodA","goodB","localeCompare","length","Error","console","log","getReorderedGoods","className","onClick","type","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAU,EACVC,YAAY,GAHhB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBE,YAAaF,EAAME,gBARzB,EAYEG,mBAAqB,WACnB,EAAKD,SAAS,CAAEH,SAAU,KAb9B,EAgBEK,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAU,KAjB9B,EAoBEM,MAAQ,WACN,EAAKH,SAAS,CACZH,SAAU,EACVC,YAAY,KAvBlB,4CA2BE,WACE,MAAiCM,KAAKR,MAA9BE,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SACdQ,EAzEH,SACLA,EADK,GAGJ,IADCR,EACF,EADEA,SAAUC,EACZ,EADYA,WAENQ,EAAY,YAAOD,GAEzB,OAAQR,GACN,KAAK,EACH,MAEF,KAAK,EACHS,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAME,cAAcD,MAE7B,MAEF,KAAK,EACHH,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAMG,OAASF,EAAME,UAE9B,MAEF,QACE,MAAMC,MAAM,oBAYhB,OATId,GACFQ,EAAaP,UAMfc,QAAQC,IAAIjB,EAAUC,GAEfQ,EAsCSS,CAAkBrB,EAAiB,CAAEG,WAAUC,eAE7D,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASb,KAAKH,mBACdiB,KAAK,SACLF,UAAS,yBAAiC,IAAbnB,EAAiB,GAAK,YAHrD,iCAQA,wBACEoB,QAASb,KAAKF,aACdgB,KAAK,SACLF,UAAS,4BAAoC,IAAbnB,EAAiB,GAAK,YAHxD,4BAQA,wBACEoB,QAASb,KAAKL,QACdmB,KAAK,SACLF,UAAS,4BAAuBlB,EAAa,GAAK,aAHpD,qBAOc,IAAbD,IAAiC,IAAfC,EACf,GAEA,wBACEmB,QAASb,KAAKD,MACde,KAAK,SACLF,UAAU,4BAHZ,sBAWN,6BACE,6BACGX,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBA3ErB,GAAyBC,IAAMC,WCtE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b542f38e.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case 0:\n      break;\n\n    case 1:\n      visibleGoods.sort((goodA, goodB) => {\n        return goodA.localeCompare(goodB);\n      });\n      break;\n\n    case 2:\n      visibleGoods.sort((goodA, goodB) => {\n        return goodA.length - goodB.length;\n      });\n      break;\n\n    default:\n      throw Error('Unknown sortType');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n  // To avoid the original array mutation\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: 0,\n    isReversed: false,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: 1 });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: 2 });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: 0,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.sortAlphabetically}\n            type=\"button\"\n            className={`button is-info ${sortType === 1 ? '' : 'is-light'}`}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.sortByLength}\n            type=\"button\"\n            className={`button is-success ${sortType === 2 ? '' : 'is-light'}`}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.reverse}\n            type=\"button\"\n            className={`button is-warning ${isReversed ? '' : ' is-light'}`}\n          >\n            Reverse\n          </button>\n          {sortType === 0 && isReversed === false\n            ? ''\n            : (\n              <button\n                onClick={this.reset}\n                type=\"button\"\n                className=\"button is-danger is-light\"\n              >\n                Reset\n              </button>\n            )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}